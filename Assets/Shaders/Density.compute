#pragma kernel Density

#include "./Helpers/ComputeConstants.hlsl"
#include "./FastNoise/FastNoise.hlsl"
#include "./Helpers/Noise.compute"

RWStructuredBuffer<float> isoValues;

[numthreads(NUM_THREADS, NUM_THREADS, NUM_THREADS)]
void Density (int3 tid: SV_DispatchThreadID)
{
    if (tid.x >= POINT_PER_AXIS || tid.y >= POINT_PER_AXIS || tid.z >= POINT_PER_AXIS) {
        return;
    }

	fnl_state noise = fnlCreateState();
	noise.noise_type = FNL_NOISE_OPENSIMPLEX2;

	isoValues[tid.x * 64 + tid.y * 8 + tid.z] = fnlGetNoise3D(noise, tid.x, tid.y, tid.z) * 10 + 10;
}